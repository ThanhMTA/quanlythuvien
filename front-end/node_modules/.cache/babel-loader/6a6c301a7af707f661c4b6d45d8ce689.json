{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh\\\\Desktop\\\\code\\\\h\\u1EC7 th\\u1ED1ng ph\\xE2n t\\xE1n\\\\web-thu-vien-mern-stack-main\\\\front-end\\\\src\\\\Pages\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./Upload.css\";\nimport { ref, uploadBytes, getDownloadURL, listAll } from \"firebase/storage\";\nimport { storage } from \"../firebase\";\nimport { v4 } from \"uuid\";\nimport React from 'react';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [imageUpload, setImageUpload] = useState(null);\n  const [imageURL, setImageURL] = useState([]);\n  const [FileExcel, setFileExcel] = useState(null);\n  const imageListRef = ref(storage, \"image/\");\n  const uploadFile = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `image/${imageUpload.name + v4()}`);\n    uploadBytes(imageRef, imageUpload).then(snapshot => {\n      getDownloadURL(snapshot.ref).then(url => {\n        setImageURL(prev => [...prev, url]);\n      });\n    });\n  };\n  useEffect(() => {\n    listAll(imageListRef).then(response => {\n      response.items.forEach(item => {\n        getDownloadURL(item).then(url => {\n          setImageURL(prev => [...prev, url]);\n          console.log(item);\n        });\n      });\n    });\n  }, []);\n  const handleExcel = () => {\n    const file = FileExcel;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n      console.log(jsonData);\n      // Xử lý dữ liệu Excel ở đây\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => {\n          setImageUpload(e.target.files[0]);\n          console.log(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \" Upload images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), imageURL.map(url => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: \"\",\n        srcset: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"upload excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => {\n          setFileExcel(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExcel,\n        children: \" excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Upload, \"/dEOhJgZSdFKqOKds6+JvzzM/pE=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["useState","useEffect","ref","uploadBytes","getDownloadURL","listAll","storage","v4","React","XLSX","jsxDEV","_jsxDEV","Upload","_s","imageUpload","setImageUpload","imageURL","setImageURL","FileExcel","setFileExcel","imageListRef","uploadFile","imageRef","name","then","snapshot","url","prev","response","items","forEach","item","console","log","handleExcel","file","reader","FileReader","onload","e","data","Uint8Array","target","result","workbook","read","type","worksheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","header","readAsArrayBuffer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","files","onClick","map","src","alt","srcset","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Thanh/Desktop/code/hệ thống phân tán/web-thu-vien-mern-stack-main/front-end/src/Pages/Upload.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./Upload.css\"\nimport {\n    ref,\n    uploadBytes,\n    getDownloadURL,\n    listAll\n} from \"firebase/storage\";\nimport { storage } from \"../firebase\";\nimport { v4 } from \"uuid\";\nimport React from 'react';\nimport * as XLSX from 'xlsx';\nfunction Upload() {\n    const [imageUpload, setImageUpload] = useState(null);\n    const [imageURL, setImageURL] = useState([]);\n    const [FileExcel, setFileExcel] = useState(null);\n    const imageListRef = ref(storage, \"image/\")\n\n    const uploadFile = () => {\n        if (imageUpload == null) return;\n        const imageRef = ref(storage, `image/${imageUpload.name + v4()}`);\n        uploadBytes(imageRef, imageUpload).then((snapshot) => {\n            getDownloadURL(snapshot.ref).then((url) => {\n                setImageURL((prev) => [...prev, url]);\n            });\n        });\n\n    };\n\n\n    useEffect(() => {\n        listAll(imageListRef).then((response) => {\n            response.items.forEach((item) => {\n                getDownloadURL(item).then((url) => {\n                    setImageURL((prev) => [...prev, url]);\n                    console.log(item);\n                });\n            });\n        });\n\n    }, []);\n\n\n    const handleExcel = () => {\n        const file = FileExcel;\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = new Uint8Array(e.target.result);\n            const workbook = XLSX.read(data, { type: 'array' });\n            const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n            const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n            console.log(jsonData);\n            // Xử lý dữ liệu Excel ở đây\n        };\n        reader.readAsArrayBuffer(file);\n    }\n\n\n\n    return (\n        \n\n        <div className=\"Upload\">\n            <div>\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n           \n                <input type=\"file\" onChange={(e) => {\n                    setImageUpload(e.target.files[0]);\n                    console.log(e);\n                }\n                } />\n\n\n            </div>\n\n\n            <button onClick={uploadFile}> Upload images</button>\n\n            {imageURL.map((url) => {\n                return <img src={url} alt=\"\" srcset=\"\" />\n            })}\n\n\n            <div>\n                <label htmlFor=\"\">upload excel</label>\n                <input type=\"file\" onChange={(e) => {\n                    setFileExcel(e.target.files[0])\n                }}/>\n                <button onClick={handleExcel}> excel</button>\n            </div>\n\n\n\n\n\n        </div>\n    )\n\n\n\n\n\n\n}\n\nexport default Upload;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
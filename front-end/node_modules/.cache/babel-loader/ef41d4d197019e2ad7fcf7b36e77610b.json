{"ast":null,"code":"import TransApi from \"../callAPI/trans.js\";\nimport BookApi from \"../callAPI/BookApi.js\";\nimport UserApi from \"../callAPI/user.js\";\nconst TransController = {\n  getAllTrans_Activie: async () => {\n    // try {\n    //     const alltrans = await TransApi.getAllTrans();\n    //     // Xử lý dữ liệu nếu cần\n    //     const processedTransactions = await Promise.all(alltrans.map(async transaction => {\n    //         const borrower = await User.findById(transaction.borrowerId);\n    //         const books = await Promise.all(transaction.books.map(async bookId => {\n    //             return await Book.findById(bookId);\n    //         }));\n    //         return {\n    //             id: transaction._id,\n    //             borrowerName: borrower.userFullName,\n    //             bookNames: books.map(book => book.bookName).join(', '),\n    //             fromDate: transaction.fromDate,\n    //             toDate: transaction.toDate,\n    //             returnDate: transaction.returnDate,\n    //             createdAt: transaction.createdAt\n    //         };\n    //     }));\n\n    //     return processedTransactions;\n    // } catch (error) {\n    //     // Xử lý lỗi nếu cần\n    //     console.error(\"Error in getting all transactions:\", error);\n    //     throw error;\n    // }\n    try {\n      // Lấy tất cả các giao dịch\n      const allTransactions = await TransApi.getAllTrans();\n\n      // Tạo một mảng để chứa thông tin user và book\n      const transactionDetails = [];\n\n      // Duyệt qua từng transaction và lấy thông tin cần thiết\n      for (const transaction of allTransactions) {\n        const userId = transaction.borrowerId;\n        const bookID = transaction.books;\n\n        // Lấy thông tin của user dựa trên userId\n        const user = await UserApi.getUserbyID(userId);\n\n        // Lấy thông tin của book dựa trên bookID\n        const book = await TransApi.getBookbyID(bookID);\n\n        // Thêm thông tin user và book vào mảng transactionDetails\n        transactionDetails.push({\n          userName: user.name,\n          bookName: book.title\n        });\n      }\n\n      // Trả về mảng chứa thông tin user và book\n      return transactionDetails;\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }\n\n  // Các hàm controller khác có thể được thêm ở đây\n};\n\nexport default TransController;","map":{"version":3,"names":["TransApi","BookApi","UserApi","TransController","getAllTrans_Activie","allTransactions","getAllTrans","transactionDetails","transaction","userId","borrowerId","bookID","books","user","getUserbyID","book","getBookbyID","push","userName","name","bookName","title","error","console"],"sources":["C:/Users/Thanh/Desktop/code/hệ thống phân tán/web-thu-vien-mern-stack-main/front-end/src/Controller/TransactionController.js"],"sourcesContent":["import TransApi from \"../callAPI/trans.js\"\r\nimport BookApi from \"../callAPI/BookApi.js\";\r\nimport UserApi from \"../callAPI/user.js\";\r\nconst TransController = {\r\n    getAllTrans_Activie: async () => {\r\n        // try {\r\n        //     const alltrans = await TransApi.getAllTrans();\r\n        //     // Xử lý dữ liệu nếu cần\r\n        //     const processedTransactions = await Promise.all(alltrans.map(async transaction => {\r\n        //         const borrower = await User.findById(transaction.borrowerId);\r\n        //         const books = await Promise.all(transaction.books.map(async bookId => {\r\n        //             return await Book.findById(bookId);\r\n        //         }));\r\n        //         return {\r\n        //             id: transaction._id,\r\n        //             borrowerName: borrower.userFullName,\r\n        //             bookNames: books.map(book => book.bookName).join(', '),\r\n        //             fromDate: transaction.fromDate,\r\n        //             toDate: transaction.toDate,\r\n        //             returnDate: transaction.returnDate,\r\n        //             createdAt: transaction.createdAt\r\n        //         };\r\n        //     }));\r\n\r\n        //     return processedTransactions;\r\n        // } catch (error) {\r\n        //     // Xử lý lỗi nếu cần\r\n        //     console.error(\"Error in getting all transactions:\", error);\r\n        //     throw error;\r\n        // }\r\n        try {\r\n            // Lấy tất cả các giao dịch\r\n            const allTransactions = await TransApi.getAllTrans();\r\n\r\n            // Tạo một mảng để chứa thông tin user và book\r\n            const transactionDetails = [];\r\n\r\n            // Duyệt qua từng transaction và lấy thông tin cần thiết\r\n            for (const transaction of allTransactions) {\r\n                const userId = transaction.borrowerId;\r\n                const bookID = transaction.books;\r\n\r\n                // Lấy thông tin của user dựa trên userId\r\n                const user = await UserApi.getUserbyID(userId);\r\n\r\n                // Lấy thông tin của book dựa trên bookID\r\n                const book = await TransApi.getBookbyID(bookID);\r\n\r\n                // Thêm thông tin user và book vào mảng transactionDetails\r\n                transactionDetails.push({\r\n                    userName: user.name,\r\n                    bookName: book.title\r\n                });\r\n            }\r\n\r\n            // Trả về mảng chứa thông tin user và book\r\n            return transactionDetails;\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n        }\r\n\r\n    },\r\n\r\n    // Các hàm controller khác có thể được thêm ở đây\r\n};\r\nexport default TransController;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,MAAMC,eAAe,GAAG;EACpBC,mBAAmB,EAAE,MAAAA,CAAA,KAAY;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI;MACA;MACA,MAAMC,eAAe,GAAG,MAAML,QAAQ,CAACM,WAAW,CAAC,CAAC;;MAEpD;MACA,MAAMC,kBAAkB,GAAG,EAAE;;MAE7B;MACA,KAAK,MAAMC,WAAW,IAAIH,eAAe,EAAE;QACvC,MAAMI,MAAM,GAAGD,WAAW,CAACE,UAAU;QACrC,MAAMC,MAAM,GAAGH,WAAW,CAACI,KAAK;;QAEhC;QACA,MAAMC,IAAI,GAAG,MAAMX,OAAO,CAACY,WAAW,CAACL,MAAM,CAAC;;QAE9C;QACA,MAAMM,IAAI,GAAG,MAAMf,QAAQ,CAACgB,WAAW,CAACL,MAAM,CAAC;;QAE/C;QACAJ,kBAAkB,CAACU,IAAI,CAAC;UACpBC,QAAQ,EAAEL,IAAI,CAACM,IAAI;UACnBC,QAAQ,EAAEL,IAAI,CAACM;QACnB,CAAC,CAAC;MACN;;MAEA;MACA,OAAOd,kBAAkB;IAC7B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EAEJ;;EAEA;AACJ,CAAC;;AACD,eAAenB,eAAe"},"metadata":{},"sourceType":"module"}
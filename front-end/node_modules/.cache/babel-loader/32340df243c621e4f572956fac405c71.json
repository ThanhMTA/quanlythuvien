{"ast":null,"code":"import TransApi from \"../callAPI/trans.js\";\nconst TransController = {\n  getAllTrans_Activie: async () => {\n    // try {\n    //     const alltrans = await TransApi.getAllTrans();\n    //     // Xử lý dữ liệu nếu cần\n    //     const processedTransactions = await Promise.all(alltrans.map(async transaction => {\n    //         const borrower = await User.findById(transaction.borrowerId);\n    //         const books = await Promise.all(transaction.books.map(async bookId => {\n    //             return await Book.findById(bookId);\n    //         }));\n    //         return {\n    //             id: transaction._id,\n    //             borrowerName: borrower.userFullName,\n    //             bookNames: books.map(book => book.bookName).join(', '),\n    //             fromDate: transaction.fromDate,\n    //             toDate: transaction.toDate,\n    //             returnDate: transaction.returnDate,\n    //             createdAt: transaction.createdAt\n    //         };\n    //     }));\n\n    //     return processedTransactions;\n    // } catch (error) {\n    //     // Xử lý lỗi nếu cần\n    //     console.error(\"Error in getting all transactions:\", error);\n    //     throw error;\n    // }\n  }\n\n  // Các hàm controller khác có thể được thêm ở đây\n};\n\nexport default TransController;","map":{"version":3,"names":["TransApi","TransController","getAllTrans_Activie"],"sources":["C:/Users/Thanh/Desktop/code/hệ thống phân tán/web-thu-vien-mern-stack-main/front-end/src/Controller/TransactionController.js"],"sourcesContent":["import TransApi from \"../callAPI/trans.js\"\r\nconst TransController = {\r\n    getAllTrans_Activie: async () => {\r\n        // try {\r\n        //     const alltrans = await TransApi.getAllTrans();\r\n        //     // Xử lý dữ liệu nếu cần\r\n        //     const processedTransactions = await Promise.all(alltrans.map(async transaction => {\r\n        //         const borrower = await User.findById(transaction.borrowerId);\r\n        //         const books = await Promise.all(transaction.books.map(async bookId => {\r\n        //             return await Book.findById(bookId);\r\n        //         }));\r\n        //         return {\r\n        //             id: transaction._id,\r\n        //             borrowerName: borrower.userFullName,\r\n        //             bookNames: books.map(book => book.bookName).join(', '),\r\n        //             fromDate: transaction.fromDate,\r\n        //             toDate: transaction.toDate,\r\n        //             returnDate: transaction.returnDate,\r\n        //             createdAt: transaction.createdAt\r\n        //         };\r\n        //     }));\r\n\r\n        //     return processedTransactions;\r\n        // } catch (error) {\r\n        //     // Xử lý lỗi nếu cần\r\n        //     console.error(\"Error in getting all transactions:\", error);\r\n        //     throw error;\r\n        // }\r\n    },\r\n\r\n    // Các hàm controller khác có thể được thêm ở đây\r\n};\r\nexport default TransController;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,MAAMC,eAAe,GAAG;EACpBC,mBAAmB,EAAE,MAAAA,CAAA,KAAY;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;EAAA;;EAGJ;AACJ,CAAC;;AACD,eAAeD,eAAe"},"metadata":{},"sourceType":"module"}
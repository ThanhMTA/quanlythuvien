{"ast":null,"code":"const TransController = {\n  getAllTrans_Activie: async () => {\n    try {\n      // Lấy tất cả các giao dịch\n      const allTransactions = await TransApi.getAllTrans();\n\n      // Tạo một mảng các promise để thực hiện các cuộc gọi không đồng bộ một cách song song\n      const promises = allTransactions.map(async transaction => {\n        const userId = transaction.borrowerId;\n        const bookIds = transaction.books;\n\n        // Kiểm tra xem userId và bookIds có tồn tại không\n        if (!userId || !bookIds || bookIds.length === 0) {\n          console.warn(`Transaction ${transaction._id} is missing userId or bookIds`);\n          return null; // Trả về null nếu dữ liệu không đủ để xử lý\n        }\n\n        // Lấy thông tin của user dựa trên userId\n        const userPromise = UserApi.getUserbyID(userId);\n\n        // Lấy thông tin của các sách dựa trên các bookId\n        const bookPromises = bookIds.map(bookId => BookApi.getBookbyID(bookId));\n\n        // Chờ cho tất cả các cuộc gọi không đồng bộ hoàn thành\n        const user = await userPromise;\n        const books = await Promise.all(bookPromises);\n\n        // Trả về thông tin user và sách cho giao dịch này\n        return {\n          userName: user.name,\n          books: books.map(book => book.title),\n          _id: transaction._id,\n          fromDate: transaction.fromDate,\n          toDate: transaction.toDate,\n          returnDate: transaction.returnDate,\n          createdAt: transaction.createdAt\n        };\n      });\n\n      // Chờ cho tất cả các promise hoàn thành và loại bỏ các phần tử null\n      const transactionDetails = await Promise.all(promises);\n      return transactionDetails.filter(transaction => transaction !== null);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      throw error; // Throw lỗi để xử lý ở phía gọi hàm nếu cần\n    }\n  }\n\n  // Các hàm controller khác có thể được thêm ở đây\n};\n\nexport default TransController;","map":{"version":3,"names":["TransController","getAllTrans_Activie","allTransactions","TransApi","getAllTrans","promises","map","transaction","userId","borrowerId","bookIds","books","length","console","warn","_id","userPromise","UserApi","getUserbyID","bookPromises","bookId","BookApi","getBookbyID","user","Promise","all","userName","name","book","title","fromDate","toDate","returnDate","createdAt","transactionDetails","filter","error"],"sources":["C:/Users/Thanh/Desktop/code/hệ thống phân tán/web-thu-vien-mern-stack-main/front-end/src/Controller/TransactionController.js"],"sourcesContent":["\r\nconst TransController = {\r\n    getAllTrans_Activie: async () => {\r\n        try {\r\n            // Lấy tất cả các giao dịch\r\n            const allTransactions = await TransApi.getAllTrans();\r\n\r\n            // Tạo một mảng các promise để thực hiện các cuộc gọi không đồng bộ một cách song song\r\n            const promises = allTransactions.map(async transaction => {\r\n                const userId = transaction.borrowerId;\r\n                const bookIds = transaction.books;\r\n\r\n                // Kiểm tra xem userId và bookIds có tồn tại không\r\n                if (!userId || !bookIds || bookIds.length === 0) {\r\n                    console.warn(`Transaction ${transaction._id} is missing userId or bookIds`);\r\n                    return null; // Trả về null nếu dữ liệu không đủ để xử lý\r\n                }\r\n\r\n                // Lấy thông tin của user dựa trên userId\r\n                const userPromise = UserApi.getUserbyID(userId);\r\n\r\n                // Lấy thông tin của các sách dựa trên các bookId\r\n                const bookPromises = bookIds.map(bookId => BookApi.getBookbyID(bookId));\r\n\r\n                // Chờ cho tất cả các cuộc gọi không đồng bộ hoàn thành\r\n                const user = await userPromise;\r\n                const books = await Promise.all(bookPromises);\r\n\r\n                // Trả về thông tin user và sách cho giao dịch này\r\n                return {\r\n                    userName: user.name,\r\n                    books: books.map(book => book.title),\r\n                    _id: transaction._id,\r\n                    fromDate: transaction.fromDate,\r\n                    toDate: transaction.toDate,\r\n                    returnDate: transaction.returnDate,\r\n                    createdAt: transaction.createdAt\r\n                };\r\n            });\r\n\r\n            // Chờ cho tất cả các promise hoàn thành và loại bỏ các phần tử null\r\n            const transactionDetails = await Promise.all(promises);\r\n            return transactionDetails.filter(transaction => transaction !== null);\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            throw error; // Throw lỗi để xử lý ở phía gọi hàm nếu cần\r\n        }\r\n    },\r\n\r\n    // Các hàm controller khác có thể được thêm ở đây\r\n};\r\nexport default TransController;\r\n"],"mappings":"AACA,MAAMA,eAAe,GAAG;EACpBC,mBAAmB,EAAE,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA;MACA,MAAMC,eAAe,GAAG,MAAMC,QAAQ,CAACC,WAAW,CAAC,CAAC;;MAEpD;MACA,MAAMC,QAAQ,GAAGH,eAAe,CAACI,GAAG,CAAC,MAAMC,WAAW,IAAI;QACtD,MAAMC,MAAM,GAAGD,WAAW,CAACE,UAAU;QACrC,MAAMC,OAAO,GAAGH,WAAW,CAACI,KAAK;;QAEjC;QACA,IAAI,CAACH,MAAM,IAAI,CAACE,OAAO,IAAIA,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;UAC7CC,OAAO,CAACC,IAAI,CAAE,eAAcP,WAAW,CAACQ,GAAI,+BAA8B,CAAC;UAC3E,OAAO,IAAI,CAAC,CAAC;QACjB;;QAEA;QACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,WAAW,CAACV,MAAM,CAAC;;QAE/C;QACA,MAAMW,YAAY,GAAGT,OAAO,CAACJ,GAAG,CAACc,MAAM,IAAIC,OAAO,CAACC,WAAW,CAACF,MAAM,CAAC,CAAC;;QAEvE;QACA,MAAMG,IAAI,GAAG,MAAMP,WAAW;QAC9B,MAAML,KAAK,GAAG,MAAMa,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;;QAE7C;QACA,OAAO;UACHO,QAAQ,EAAEH,IAAI,CAACI,IAAI;UACnBhB,KAAK,EAAEA,KAAK,CAACL,GAAG,CAACsB,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;UACpCd,GAAG,EAAER,WAAW,CAACQ,GAAG;UACpBe,QAAQ,EAAEvB,WAAW,CAACuB,QAAQ;UAC9BC,MAAM,EAAExB,WAAW,CAACwB,MAAM;UAC1BC,UAAU,EAAEzB,WAAW,CAACyB,UAAU;UAClCC,SAAS,EAAE1B,WAAW,CAAC0B;QAC3B,CAAC;MACL,CAAC,CAAC;;MAEF;MACA,MAAMC,kBAAkB,GAAG,MAAMV,OAAO,CAACC,GAAG,CAACpB,QAAQ,CAAC;MACtD,OAAO6B,kBAAkB,CAACC,MAAM,CAAC5B,WAAW,IAAIA,WAAW,KAAK,IAAI,CAAC;IACzE,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACZvB,OAAO,CAACuB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,MAAMA,KAAK,CAAC,CAAC;IACjB;EACJ;;EAEA;AACJ,CAAC;;AACD,eAAepC,eAAe"},"metadata":{},"sourceType":"module"}
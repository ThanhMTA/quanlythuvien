{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh\\\\Desktop\\\\code\\\\h\\u1EC7 th\\u1ED1ng ph\\xE2n t\\xE1n\\\\web-thu-vien-mern-stack-main\\\\front-end\\\\src\\\\Components\\\\BookList\\\\BookList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport './BookList.css';\nimport axios from 'axios';\nimport Loading from \"../Loader/Loader\";\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\";\nimport Footer from '../Footer/Footer';\nimport { Button, Modal, Cascader, DatePicker, Form, Input, InputNumber, Mentions, Select, TreeSelect, Breadcrumb } from 'antd';\nimport getUrlImage from \"../../Pages/getURLimage\";\nimport TransController from '../../Controller/TransactionController';\nimport { AuthContext } from '../../Context/AuthContext.js';\n// import Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BookList() {\n  _s();\n  const [fromDate, setFromDate] = useState(null);\n  const [toDate, setToDate] = useState(null);\n  const [book, setBook] = useState(null);\n  const {\n    category\n  } = useParams();\n  const [listBook, setListbook] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    user\n  } = useContext(AuthContext);\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  const API_URL = process.env.REACT_APP_API_URL;\n  useEffect(() => {\n    setLoading(true);\n    const getListBook = async () => {\n      try {\n        if (category !== \"\") {\n          const response = await axios.get(API_URL + 'api/books/getbycate/' + category);\n          setListbook(response.data);\n        } else {\n          const response = await axios.get(API_URL + 'api/books/allbooks');\n          setListbook(response.data);\n        }\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        console.log('Error when get list book =>', err);\n      }\n    };\n    getListBook();\n  }, [API_URL]);\n  const handleBorrowClick = book => {\n    setBook(book);\n    setIsModalOpen(true);\n  };\n  // add transactions\n  const addTransaction = async values => {\n    try {\n      setLoading(true);\n\n      // Extracting form values\n      const {\n        borrowerId,\n        bookIds,\n        transactionType,\n        fromDate,\n        toDate\n      } = values;\n      const transactionData = {\n        books: bookIds,\n        borrowerId: borrowerId,\n        transactionType: transactionType,\n        fromDate: fromDate,\n        toDate: toDate,\n        returnDate: null\n        // isAdmin: user.isAdmin,\n      };\n\n      // Adding transaction\n      await TransController.addTransaction(transactionData);\n\n      // Alerting success message\n      alert('Tạo phiếu mượn thành công 🎉');\n      //   } else {\n      //     alert('Cuốn sách này đã hết hoặc không phù hợp loại giao dịch');\n      //   }\n      // } else {\n      //   alert('Vui lòng điền đầy đủ thông tin');\n      // }\n    } catch (err) {\n      console.log(err);\n      alert('Đã xảy ra lỗi khi tạo phiếu mượn');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUpdateTransaction = async transactionId => {\n    try {\n      const data = {\n        transactionStatus: \"True\"\n      };\n      // Gọi hàm updateTransaction từ TransController để cập nhật giao dịch\n      const updatedTransaction = await TransController.updateTransaction(transactionId, data);\n      const Transactions = await TransController.getAllTrans();\n\n      // Lọc danh sách các giao dịch có trạng thái là \"Active\"\n      // const activeTransactions = allTransactions.filter(transaction => transaction && transaction.transactionStatus === \"Active\");\n\n      console.log('Transaction updated:', updatedTransaction);\n      alert('cập nhật thành công 🎉');\n      const activeTransactions = Transactions.filter(transaction => transaction && transaction.transactionStatus && transaction.transactionStatus === \"Active\");\n      console.log(\"thanh\", Transactions);\n    } catch (error) {\n      console.error('Error updating transaction:', error);\n    }\n  };\n  const handleOkModal = () => {\n    // Thu thập thông tin từ các trường nhập liệu trong modal\n    const formData = {\n      borrowerId: user.user._id,\n      // Thay bằng thông tin thực tế\n      bookIds: book._id,\n      // Sử dụng _id của sách đã chọn\n      transactionType: 'Muon',\n      // Có thể cần điều chỉnh tùy theo yêu cầu của hệ thống\n      fromDate: fromDate,\n      toDate: toDate\n    };\n\n    // Gọi hàm thêm giao dịch mới\n    addTransaction(formData);\n    // Đóng modal sau khi thêm giao dịch\n    setIsModalOpen(false);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        padding: 24,\n        margin: 20,\n        minHeight: 280,\n        width: 300,\n        background: colorBgContainer,\n        borderRadius: borderRadiusLG\n      },\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n}\n_s(BookList, \"htjAsKCP6LrAmfgR5PPCqXuQVcI=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","Loading","Link","useParams","FaArrowLeft","useHistory","Footer","Button","Modal","Cascader","DatePicker","Form","Input","InputNumber","Mentions","Select","TreeSelect","Breadcrumb","getUrlImage","TransController","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","BookList","_s","fromDate","setFromDate","toDate","setToDate","book","setBook","category","listBook","setListbook","loading","setLoading","history","isModalOpen","setIsModalOpen","user","handleOk","handleCancel","API_URL","process","env","REACT_APP_API_URL","getListBook","response","get","data","err","console","log","handleBorrowClick","addTransaction","values","borrowerId","bookIds","transactionType","transactionData","books","returnDate","alert","handleUpdateTransaction","transactionId","transactionStatus","updatedTransaction","updateTransaction","Transactions","getAllTrans","activeTransactions","filter","transaction","error","handleOkModal","formData","_id","fileName","_jsxFileName","lineNumber","columnNumber","children","Content","style","padding","margin","minHeight","width","background","colorBgContainer","borderRadius","borderRadiusLG","_c","$RefreshReg$"],"sources":["C:/Users/Thanh/Desktop/code/hệ thống phân tán/web-thu-vien-mern-stack-main/front-end/src/Components/BookList/BookList.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport './BookList.css'\nimport axios from 'axios'\nimport Loading from \"../Loader/Loader\";\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useHistory } from \"react-router-dom\"\nimport Footer from '../Footer/Footer'\nimport {\n    Button, Modal,\n    Cascader,\n    DatePicker,\n    Form,\n    Input,\n    InputNumber,\n    Mentions,\n    Select,\n    TreeSelect,\n    Breadcrumb\n} from 'antd';\nimport getUrlImage from \"../../Pages/getURLimage\"\nimport TransController from '../../Controller/TransactionController';\nimport { AuthContext } from '../../Context/AuthContext.js';\n// import Breadcrumb from '../Breadcrumb/Breadcrumb';\n\nfunction BookList() {\n    const [fromDate, setFromDate] = useState(null)\n    const [toDate, setToDate] = useState(null);\n    const [book, setBook] = useState(null);\n    const { category } = useParams();\n    const [listBook, setListbook] = useState([])\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const { user } = useContext(AuthContext)\n\n    const handleOk = () => {\n        setIsModalOpen(false);\n    };\n    const handleCancel = () => {\n        setIsModalOpen(false);\n    };\n\n    const API_URL = process.env.REACT_APP_API_URL\n\n    useEffect(() => {\n        setLoading(true)\n        const getListBook = async () => {\n            try {\n                if (category !== \"\") {\n                    const response = await axios.get(API_URL + 'api/books/getbycate/' + category)\n                    setListbook(response.data);\n\n                } else {\n                    const response = await axios.get(API_URL + 'api/books/allbooks')\n                    setListbook(response.data);\n                }\n\n\n\n                setLoading(false);\n\n            } catch (err) {\n                setLoading(false);\n                console.log('Error when get list book =>', err)\n            }\n        }\n        getListBook()\n    }, [API_URL])\n    const handleBorrowClick = (book) => {\n        setBook(book);\n        setIsModalOpen(true);\n    };\n    // add transactions\n    const addTransaction = async (values) => {\n        try {\n            setLoading(true);\n\n            // Extracting form values\n            const { borrowerId, bookIds, transactionType, fromDate, toDate } = values;\n            const transactionData = {\n                books: bookIds,\n                borrowerId: borrowerId,\n                transactionType: transactionType,\n                fromDate: fromDate,\n                toDate: toDate,\n                returnDate: null\n                // isAdmin: user.isAdmin,\n            };\n\n            // Adding transaction\n            await TransController.addTransaction(transactionData);\n\n            // Alerting success message\n            alert('Tạo phiếu mượn thành công 🎉');\n            //   } else {\n            //     alert('Cuốn sách này đã hết hoặc không phù hợp loại giao dịch');\n            //   }\n            // } else {\n            //   alert('Vui lòng điền đầy đủ thông tin');\n            // }\n        } catch (err) {\n            console.log(err);\n            alert('Đã xảy ra lỗi khi tạo phiếu mượn');\n        } finally {\n            setLoading(false);\n        }\n    };\n    const handleUpdateTransaction = async (transactionId) => {\n        try {\n            const data = {\n                transactionStatus: \"True\"\n            };\n            // Gọi hàm updateTransaction từ TransController để cập nhật giao dịch\n            const updatedTransaction = await TransController.updateTransaction(transactionId, data);\n            const Transactions = await TransController.getAllTrans();\n\n            // Lọc danh sách các giao dịch có trạng thái là \"Active\"\n            // const activeTransactions = allTransactions.filter(transaction => transaction && transaction.transactionStatus === \"Active\");\n\n            console.log('Transaction updated:', updatedTransaction);\n            alert('cập nhật thành công 🎉');\n            const activeTransactions = Transactions.filter(transaction => transaction && transaction.transactionStatus && transaction.transactionStatus === \"Active\");\n            console.log(\"thanh\", Transactions)\n\n        } catch (error) {\n            console.error('Error updating transaction:', error);\n        }\n    };\n\n    const handleOkModal = () => {\n        // Thu thập thông tin từ các trường nhập liệu trong modal\n        const formData = {\n            borrowerId: user.user._id, // Thay bằng thông tin thực tế\n            bookIds: book._id, // Sử dụng _id của sách đã chọn\n            transactionType: 'Muon', // Có thể cần điều chỉnh tùy theo yêu cầu của hệ thống\n            fromDate: fromDate,\n            toDate: toDate\n        };\n\n        // Gọi hàm thêm giao dịch mới\n        addTransaction(formData);\n        // Đóng modal sau khi thêm giao dịch\n        setIsModalOpen(false);\n    };\n    if (loading) return <Loading />;\n\n    return (\n        <>\n              <Content\n        style={{\n            padding: 24,\n            margin: 20,\n            minHeight: 280,\n            width: 300,\n            background: colorBgContainer,\n            borderRadius: borderRadiusLG,\n        }}\n    > </Content>\n        \n        </>\n\n    )\n}\n\nexport default BookList\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}